name: Manual release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Add-on version'
        required: true
        default: '0.0.0'

jobs:
  buildAndUpload:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        pip install scons markdown
        sudo apt update
        sudo apt install gettext
    - name: Add add-on version
      run: |
        import re
        with open("buildVars.py", 'r+', encoding='utf-8') as f:
          text = f.read()
          version = "${{ github.event.inputs.version }}"
          text = re.sub(r"\"addon_version\": .*?,", f"\"addon_version\": \"{version}\",", text)
          f.seek(0)
          f.write(text)
          f.truncate()
      shell: python 
    - name: Push changes
      run: |
        git config --global user.name github-actions
        git config --global user.email github-actions@github.com
        git commit -a -m "Update buildVars"
        git push origin HEAD:main
    - name: Build add-on
      run: scons
    - name: Calculate sha256
      run: sha256sum *.nvda-addon >> changelog.md
    - name: Create metadata file
      run: |
        import json
        import os
        import sys
        sys.path.append(os.path.dirname(__file__))
        import buildVars
        addonInfo = buildVars.addon_info
        data = dict()
        data["displayName"] = addonInfo["addon_summary"]
        data["description"] = addonInfo["addon_description"]
        data["homepage"] = addonInfo["addon_url"]
        data["publisher"] = "nvdaes"
        [major, minor] = addonInfo["addon_minimumNVDAVersion"]
        minNVDAVersion" = dict()
        minNVDAVersion["major"] = int(major)
        minNVDAVersion["minor"] = int(minor)
        minNVDAVersion["patch"] = 0
        data["minNVDAVersion"] = minNVDAVersion
        [major, minor] = addonInfo["addon_lastTestedNVDAVersion"]
        lastTestedVersion = dict()
        lastTestedVersion["major"] = int(major)
        lastTestedVersion["minor"] = int(minor)
        lastTestedVersion["patch"] = 0
        data["lastTestedVersion"] = lastTestedVersion
        data["channel"] = "stable"
        data["URL"] = f"https://github.com/{data['publisher']}/{addonInfo['addon_name']}/releases/download/{addonInfo['addon_version']}/{addonInfo['addon_name']}-{addonInfo['addon_version']}.nvda-addon"
        data["sha256"] = "abc"
        data["sourceURL" = f"{data['URL']}/"
        data["license"] = "GPL v2",
        data["licenseURL"] = "https://www.gnu.org/licenses/gpl-2.0.html"
        filename = addonInfo["version"] + ".json"
        with open(filename, "w", encoding="utf-8") as f:
          json.dump(data, f, indent="\t")
      shell: python
    - name: Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        files: |
          *.nvda-addon
        body_path: changelog.md
        prerelease: ${{ endsWith(github.event.inputs.version, '-dev') }}
