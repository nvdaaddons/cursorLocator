name: Publish to add-on datastore

on:
  workflow_dispatch:
    inputs:
      url:  
        description: 'Add-on download URL'
        required: true
      sourceUrl:  
        description: 'URL of source code'
        required: true
      channel:
        description: 'Add-on channel for store'
        default: stable
        type: choice
        options:
        - stable
        - beta
        - dev
      license:
        description: 'Add-on license'
        default: 'GPL v2'
      licenseURL:
        description: 'Add-on license URL'
        default: 'https://www.gnu.org/licenses/old-licenses/gpl-2.0.html'
      title:
        description: 'PR title'
        default: 'Add addonName.version'

jobs:

  store:
    runs-on: windows-latest
    
    steps:
    - name: Checkout validation repo
      uses: actions/checkout@v3
      with:
        repository: nvaccess/addon-datastore-validation
        submodules: true
        path: validation
    - name: Checkout datastore repo
      uses: actions/checkout@v3
      with:
        repository: nvaccess/addon-datastore
        path: store
    - name: Download add-on
      run: |
        curl --location --output addon.nvda-addon ${{ inputs.url }}
    - name: Create json
      run: |
        validation\runcreatejson -f addon.nvda-addon --dir store\addons --channel=${{ inputs.channel }} --publisher=${{ github.event.sender.login }} --sourceUrl=${{ inputs.sourceUrl }}/ --url=${{ inputs.url }} --licName="${{ inputs.license }}" --licUrl=${{ inputs.licenseURL }}
    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ secrets.PR_ACCESS_TOKEN }}
        path: store
        commit-message: ${{ inputs.title }}
        delete-branch: true
        title: ${{ inputs.title }}
        push-to-fork: ${{ github.event.sender.login }}/addon-datastore
    - name: Enable Pull Request Automerge
      if: steps.cpr.outputs.pull-request-operation == 'created'
      uses: peter-evans/enable-pull-request-automerge@v2
      with:
        token: ${{ secrets.PR_ACCESS_TOKEN }}
        pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
